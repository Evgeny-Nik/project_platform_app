name: CI for Flask Platform App

on:
  push:
    branches: 
      - "main"
    paths:       
      - 'platform_app/**'
      - '.github/workflows/platform_app_ci.yaml'
      - '!**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Read and Increment Version
      id: increment_version
      run: |
        cd platform_app
        
        # Read the current version from version.txt
        current_version=$(cat version.txt)
        echo "Current version: $current_version"
        
        # Increment the minor version
        IFS='.' read -r major minor patch <<< "$current_version"
        patch=$((patch + 1))
        new_version="$major.$minor.$patch"
        echo "New version: $new_version"
        
        # Set the new version as an environment variable
        echo "VERSION=$new_version" >> $GITHUB_ENV

    - name: Build the Docker image
      run: |
        cd platform_app
        docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USER }}/platform_app:${{ env.VERSION }}
        docker tag ${{ secrets.DOCKERHUB_USER }}/platform_app:${{ env.VERSION }} ${{ secrets.DOCKERHUB_USER }}/platform_app:latest
      
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKERHUB_USER }}/platform_app:${{ env.VERSION }}
        docker push ${{ secrets.DOCKERHUB_USER }}/platform_app:latest

    - name: Update Manifest and Version Files
      run: |
        sed -i "s/tag: .*/tag: ${VERSION}/" charts/platform_app/values.yaml
        
        cd platform_app

        # Update the version.txt file
        echo "${VERSION}" > version.txt
        
        # Verify the changes
        echo "Updated values.yaml:"
        cat charts/platform_app/values.yaml
        echo "Updated version.txt:"
        cat version.txt
        
        # Commit the changes
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add ../charts/platform_app/values.yaml version.txt
        git commit -m "Update Docker image tag to ${VERSION} and version.txt"
        git push

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:

    - name: Capture error message from build
      if: failure()
      run: echo "error_message=$(cat $GITHUB_WORKSPACE/_temp/logs/* | tail -n 10)" >> $GITHUB_ENV
      id: capture_error_build

    - name: Notify Slack on Failure
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        ERROR_MESSAGE_BUILD: ${{ steps.capture_error_build.outputs.error_message }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{
          "text": "Build failed :x:",
          "attachments": [
            {
              "title": "Repository",
              "text": "${{ github.repository }}"
            },
            {
              "title": "Commit",
              "text": "${{ github.sha }}"
            },
            {
              "title": "Author",
              "text": "${{ github.actor }}"
            },
            {
              "title": "Branch",
              "text": "${{ github.ref }}"
            },
            {
              "title": "Workflow",
              "text": "${{ github.workflow }}"
            },
            {
              "title": "Job",
              "text": "${{ github.job }}"
            },
            {
              "title": "Error Message from build",
              "text": "${{ env.ERROR_MESSAGE_BUILD }}"
            },
            {
              "title": "Job URL",
              "text": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
          ]
        }' $SLACK_WEBHOOK_URL

    - name: Notify Slack on Success
      if: success()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{
          "text": "Build succeeded :white_check_mark:",
          "attachments": [
            {
              "title": "Repository",
              "text": "${{ github.repository }}"
            },
            {
              "title": "Commit",
              "text": "${{ github.sha }}"
            },
            {
              "title": "Author",
              "text": "${{ github.actor }}"
            },
            {
              "title": "Branch",
              "text": "${{ github.ref }}"
            },
            {
              "title": "Workflow",
              "text": "${{ github.workflow }}"
            },
            {
              "title": "Job",
              "text": "${{ github.job }}"
            },
            {
              "title": "Job URL",
              "text": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
          ]
        }' $SLACK_WEBHOOK_URL